services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    env_file:
      - ./client/.env.client
    depends_on:
      - server
    networks:
      - app-network
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - ./server/.env.server
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  prisma-studio:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - "5555:5555"
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - ./server/.env.server
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    command: npx prisma studio --hostname 0.0.0.0

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    env_file:
      - .env.db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
